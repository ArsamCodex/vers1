# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
#spring.datasource.url=jdbc:mysql://localhost:80/webshop
#spring.datasource.username=username
#pring.datasource.password=password
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.url=jdbc:mysql://moktok.javawebdev.com:33306/armin
spring.datasource.username=armin
spring.datasource.password=armin2020
server.port=5050
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5InnoDBDialect




#spring.security.user.name=Armin
#spring.security.user.password=0
#spring.security.user.role= # A comma separated list of roles




# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

#spring.mvc.view.prefix=/jsp/
#spring.mvc.view.suffix=.jsp

spring.view.prefix= /WEB-INF/resources/
spring.view.suffix= .jsp